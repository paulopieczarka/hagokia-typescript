{"mappings":"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AAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAEhG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAEhG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAEhG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAEhG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAEhG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAEhG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAEhG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAA,CAChG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KCxFrG,MAAA+B,UCIA,MAQE1L,YAAmBgE,EAAe,cAAfA,KAAAA,EACjBnE,KAAKuI,SAAAA,GACLvI,KAAK8L,SAAAA,GACL9L,KAAK+L,UAAAA,GAGAC,KAAKvM,GACVO,KAAKoK,ICrBT,sBACyBJ,EAAe,WAC9BI,EAAAA,IAAAA,EAA6BJ,UACnChK,KAAKiM,cAAc7B,GAEZA,uBAGoBA,GACHW,MAAM,GAAGC,KAAK,GAAGZ,KAAI,IAAMW,MAAM,WAEnDmB,EAAAA,CAAAA,CACFxL,EAAGmD,KAAK8D,MAAMyC,EAAIJ,KAAK,GAAK,EAAGrJ,EAAGkD,KAAK8D,MAAMyC,EAAIJ,KAAK,GAAK,EAAGmC,UAAW,OAEvEC,EAAAA,CAAcnN,OAAO6F,OAAOoH,EAAY,IAAIG,KAAK,UAEvDjC,EAAIE,SAAS4B,EAAY,GAAGxL,EAAI,EAAGwL,EAAY,GAAGvL,EAAI,GAE/CuL,EAAYtI,OAAS,GAAA,SAClBlD,EAAAA,EAAGC,EAAAA,UAAGwL,GAAcD,EAAYI,WAEpCF,EAAW/E,SAAAA,CAAU3G,EAAGC,GAAG0L,KAAK,qBAI9BE,EAAOJ,EAAAA,EAAsBK,cAAcL,GAAAA,EAAuB3C,OACxExJ,KAAKyM,UAAU/L,EAAGC,EAAG4L,EAAMnC,GAC3BgC,EAAWM,KAAAA,CAAMhM,EAAGC,GAAG0L,KAAK,MAExBE,EAAK9C,MAAMC,KACbwC,EAAYQ,KAAAA,CAAOhM,EAAAA,EAAGC,EAAGA,EAAI,GAAIwL,UAAW,WAG1CI,EAAK9C,MAAME,QACbuC,EAAYQ,KAAAA,CAAOhM,EAAAA,EAAGC,EAAGA,EAAI,GAAIwL,UAAW,QAG1CI,EAAK9C,MAAMG,MACbsC,EAAYQ,KAAAA,CAAOhM,EAAGA,EAAI,GAAIC,EAAAA,EAAGwL,UAAW,UAG1CI,EAAK9C,MAAMI,OACbqC,EAAYQ,KAAAA,CAAOhM,EAAGA,EAAI,GAAIC,EAAAA,EAAGwL,UAAW,2BAKzBzL,EAAWC,EAAW4L,EAAYnC,WACjDoB,EAAE,EAAGA,EAAI,GAAIA,YACXE,EAAE,EAAGA,EAAI,GAAIA,IAAAA,OAEbpF,EAD+B,IAArBiG,EAAKzC,MAAM4B,GAAGF,GACjBmB,EAAmB9B,MAAAA,EAAiBD,KACjDR,EAAIH,QAAQvJ,EAAI8K,EAAG7K,EAAI+K,EAAGpF,MD/BL+E,SAAS,KAClCrL,KAAKoK,IAAIK,mBAAmBzK,MAC5BA,KAAK4M,YAGA/F,OAAOpH,EAAgBqH,GAC5B9G,KAAK8L,SAASnK,SAASwB,MACN0J,IAAI1J,GAAQ0D,OAAOpH,EAAQqH,MAIvCzD,OAAOC,EAAcC,EAAe9D,GACzCO,KAAKuI,SAAS5G,SAASwB,MACN0J,IAAI1J,GAAQ4D,aAAa1D,SAAOC,EAAOC,EAAO9D,KAC9CoN,IAAI1J,GAAQ4D,aAAa1D,SAAOC,EAAOC,EAAO9D,KAC7CoN,IAAI1J,GAAQmF,KAAKtI,KAAK+L,WAAWhF,aAAa1D,SAAOC,EAAOC,EAAO9D,MAIhFqL,MAAM3H,EAAgBzC,EAAYC,WAC7BwJ,IAANzJ,QAAyByJ,IAANxJ,EAAMwJ,CACVhH,EAAOhE,IAAe,cAC7BiG,MAAI1E,EAAGC,GAGfwC,EAAOhE,IAAgB,gBACzBa,KAAK+L,UAAU5I,EAAOiB,IAAMjB,GAG1BA,EAAOyB,cACT5E,KAAK8M,KAAK3J,GAGZnD,KAAKuI,SAASpF,EAAOiB,IAAMjB,EAGtB4J,mBACE/M,KAAKoG,OAGJwG,yBACArC,EAAAA,OAAQC,GAAWxK,KAAKoK,IAChCpK,KAAKoG,OAAAA,EAAsBI,OAAO,WAClCxG,KAAK8K,MAAM9K,KAAKoG,OAAQmE,EAAQC,GAG1BsC,KAAK3J,GACPA,EAAO6B,SACThF,KAAK8L,SAASkB,QAAQ7J,GAIxBnD,KAAK8L,SAASY,KAAKvJ,KDtErBhD,YAAYgE,EAAe,WACzBgB,MAAMhB,GAGD6H,KAAKvM,GACVO,KAAKoK,IAAAA,EAAyByC,IAAI7M,MAAMmL,IAAAA,GAAcE,WACtDrL,KAAKoK,IAAIK,mBAAmBzK,MAC5BA,KAAK4M,aGNT,MAAAK,EAIE9M,cACEH,KAAKkN,OAAAA,IAAaC,IAGbnB,KAAKvM,GACVO,KAAKoN,uBAAuB3N,GAGvBoH,OAAOpH,EAAgBqH,GAC5B9G,KAAKqN,SAASxG,SAAOpH,EAAQqH,GAE7BA,EAAEhG,MAAM,SAASK,KAAK,SAAU,EAAGnB,KAAKqN,SAASlJ,MAG5Cd,OAAOC,EAAcC,EAAe9D,GACzCO,KAAKqN,SAAShK,SAAOC,EAAOC,EAAO9D,GAG9BsN,mBACE/M,KAAKqN,SAASN,cAGfK,uBAAuB3N,GAC7BO,KAAKkN,OAAO,UAAA,IAAArB,EACZ7L,KAAKkN,OAAO,UAAalB,KAAKvM,GAC9BO,KAAKqN,QAAUrN,KAAKkN,OAAO,iBCjCzBI,EAASC,SAASC,eAAe,UACjCC,ICCN,MASEtN,YAAYV,GACVO,KAAKP,OAAAA,EAAgBiO,eAAejO,GACpCO,KAAKK,IAAMZ,EAAOkO,WAAW,MAC7B3N,KAAKK,IAAIuN,uBAAwB,EACjC5N,KAAKK,IAAIwN,sBAAwB,OAG5B7B,KAAK8B,GACV9N,KAAK8N,KAAOA,EACZ9N,KAAK+N,SAAAA,IAAAA,EAAwB/N,KAAKP,OAAQO,KAAKK,KAC/CL,KAAKsD,MAAAA,IAAAA,EAELtD,KAAK8N,KAAK9B,KAAKhM,KAAKP,QACpBO,KAAKgO,wBAGCC,WACNjO,KAAK8N,KAAKzK,OAAOrD,KAAKsD,MAAO,EAAKtD,KAAKP,QACvCO,KAAKsD,MAAMjB,SAASZ,OAEpBzB,KAAKK,IAAI6N,UAAU,EAAG,EAAGlO,KAAKP,OAAOH,MAAOU,KAAKP,OAAOF,QACxDS,KAAK8N,KAAKjH,OAAO7G,KAAKP,OAAQO,KAAK+N,UAEnC/N,KAAKgO,wBAGCA,wBACNrO,OAAOqO,sBAAsBhO,KAAKiO,SAASlO,KAAKC,SDrCxBsN,GACpBtB,KAAAA,IEAR,MAIE7L,cACEH,KAAKmO,aAAAA,IAAAA,EACLnO,KAAKE,OAAAA,IAAAA,EAGP8L,KAAKvM,GACH6C,QAAQC,IAAI,cAEZvC,KAAKmO,aAAanC,KAAKvM,GAEvBA,EAAOQ,UAAUD,KAAKE,QACtBF,KAAKE,OAAOgD,OAAOlD,KAAKmO,aAAapB,aAGvClG,OAAOpH,EAAgBqH,GACrB9G,KAAKmO,aAAatH,OAAOpH,EAAQqH,GAGnCzD,OAAOC,EAAcC,EAAe9D,GAClCO,KAAKmO,aAAa9K,OAAOC,EAAOC,EAAO9D,GACvCO,KAAKE,OAAOmD,OAAOC,EAAOC,EAAO9D","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./src/game/engine/Canvas.ts","./src/game/engine/graphics/Graphics.ts","./src/game/engine/input/Keyboard.ts","./src/game/engine/input/Input.ts","./src/game/Constants.ts","./src/game/engine/Camera.ts","./src/game/entities/Entity.ts","./src/game/entities/components/Component.ts","./src/game/entities/components/Placeable.ts","./src/game/entities/components/Colorable.ts","./src/game/entities/components/Drawable.ts","./src/game/entities/components/Shape.ts","./src/game/entities/components/ShapeHuman.ts","./src/game/entities/components/Player.ts","./src/game/entities/components/Tile.ts","./src/game/entities/components/Solid.ts","./src/game/entities/components/Movable.ts","./src/game/entities/components/Collidable.ts","./src/game/entities/EntityPlayer.ts","./src/game/entities/EntityTile.ts","./src/game/entities/EntityFloor.ts","./src/game/entities/EntityWall.ts","./src/game/entities/EntityDialer.ts","./src/game/entities/systems/System.ts","./src/game/entities/systems/RendererSystem.ts","./src/game/entities/systems/KeyboardSystem.ts","./src/game/entities/systems/MovementSystem.ts","./src/game/entities/systems/CollisionSystem.ts","./src/game/world/WorldRoom.ts","./src/game/world/WorldMap.ts","./src/game/world/generators/Generator.ts","./src/game/world/generators/GeneratorSpaceship.ts","./src/game/world/spaceship/models/daedalus.ts","./src/game/world/spaceship/Spaceship.ts","./src/game/world/World.ts","./src/game/world/WorldGenerate.ts","./src/game/world/WorldManager.ts","./src/game/index.ts","./src/game/engine/WebGame.ts","./src/game/Hagokia.ts"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","import Camera from './Camera';\n\nclass Canvas {\n  public width: number = 800;\n  public height: number = 600;\n  public camera: Camera;\n\n  public static fromHTMLCanvas(htmlCanvas: HTMLCanvasElement): Canvas {\n    const { width, height } = htmlCanvas;\n    const canvas = new Canvas(width, height);\n\n    const onWindowResize = (): void => {\n      htmlCanvas.width = window.innerWidth;\n      htmlCanvas.height = window.innerHeight;\n      canvas.onWindowResize();\n    };\n\n    window.addEventListener('resize', onWindowResize.bind(this));\n    onWindowResize();\n\n    return canvas;\n  }\n\n  public useCamera(camera: Camera): Canvas {\n    this.camera = camera;\n    return this;\n  }\n\n  private constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n  }\n\n  protected onWindowResize(): void {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n  }\n}\n\nexport default Canvas;\n","import Canvas from '../Canvas';\n\nclass Graphics {\n  constructor(\n    private canvas: Canvas,\n    private ctx: CanvasRenderingContext2D,\n  ) {\n    this.ctx.font = '16px Sans-serif'\n  }\n\n  public save(): Graphics {\n    this.ctx.save();\n    return this;\n  }\n\n  public restore(): Graphics {\n    this.ctx.restore();\n    return this;\n  }\n\n  public translate(x: number, y: number): Graphics {\n    this.ctx.translate(x, y);\n    return this;\n  }\n\n  public rotate(deg: number): Graphics {\n    this.ctx.rotate(deg);\n    return this;\n  }\n\n  public color(color: string): Graphics {\n    this.ctx.fillStyle = color;\n    return this;\n  }\n\n  public rect(x: number, y: number, width: number, height: number): Graphics {\n    this.ctx.fillRect(x, y, width, height);\n    this.ctx.resetTransform();\n    return this;\n  }\n\n  public text(x: number | 'center', y: number, text: string) {\n    if (x === 'center') {\n      const { width } = this.ctx.measureText(text);\n      x = this.canvas.width/2 - width/2;\n    }\n\n    this.ctx.fillText(text, x, y + 16);\n  }\n}\n\nexport default Graphics;\n","class Keyboard {\n  public static readonly NONE = 0;\n  public static readonly UP = 1;\n  public static readonly DOWN = 2;\n  public static readonly PRESSED = 3;\n\n  constructor(public states: number[] = []) {\n    this.createEventsListeners();\n  }\n\n  public pool(): void {\n    Object.keys(this.states).forEach((key) => {\n      this.states[key] = this.findNextState(key);\n    });\n  }\n\n  private createEventsListeners(): void {\n    window.addEventListener('keydown', this.onKeyDown.bind(this));\n    window.addEventListener('keyup', this.onKeyUp.bind(this));\n  }\n\n  private onKeyDown({ key }: KeyboardEvent): void {\n    if (this.states[key] === Keyboard.DOWN) {\n      return;\n    }\n\n    this.states[key] = Keyboard.PRESSED;\n  }\n\n  private onKeyUp({ key }: KeyboardEvent): void {\n    this.states[key] = Keyboard.UP;\n  }\n\n  private findNextState(key: string): number {\n    switch (this.states[key]) {\n      case Keyboard.UP:\n        return Keyboard.NONE;\n      case Keyboard.PRESSED:\n      case Keyboard.DOWN:\n        return Keyboard.DOWN;\n      default:\n        return Keyboard.PRESSED;\n    }\n  }\n}\n\nexport default Keyboard;\n","import Keyboard from './Keyboard';\n\nclass Input {\n  public keyboard: Keyboard;\n\n  constructor() {\n    this.keyboard = new Keyboard();\n    console.log('Inputs init.')\n  }\n\n  public isKeyDown(key: string): boolean {\n    return false;\n  }\n\n  public isKeyUp(key: string): boolean {\n    return false;\n  }\n\n  public isKeyPressed(key: string): boolean {\n    return this.keyboard.states[key] === Keyboard.PRESSED;\n  }\n}\n\nexport default Input;\n","class Constants {\n  public static readonly TILE_SIZE: number = 64;\n}\n\nexport default Constants;\n","import { Canvas } from '~engine';\nimport { Placeable } from '~entities/components';\nimport Entity from '../entities';\nimport { Updater } from '../engine';\nimport Constants from '../Constants';\nimport Input from './input';\n\nclass Camera implements Updater {\n  private readonly THRESHOLD = 5.0;\n  private readonly SPEED = 10.0;\n\n  private target: Entity;\n  private snap: boolean = true;\n\n  constructor(\n    public x: number = 0,\n    public y: number = 0,\n    private nextPosX: number = 0,\n    private nextPosY: number = 0,\n  ) {}\n\n  public follow(entity: Entity): void {\n    this.target = entity;\n  }\n\n  public update(input: Input, delta: number, canvas: Canvas): void {\n    if (this.snap) { this.snapToTarget(canvas); }\n\n    this.centerTargetIfExists(canvas);\n\n    const dx = -this.nextPosX - this.x;\n    const dy = -this.nextPosY - this.y;\n\n    const length = Math.sqrt((dy*dy) + (dx*dx));\n    const unitX = dx / length;\n    const unitY = dy / length;\n\n    if (length > this.THRESHOLD) {\n      this.x += unitX * this.SPEED * delta;\n      this.y += unitY * this.SPEED * delta;\n    }\n  }\n\n  private centerTargetIfExists(canvas: Canvas): void {\n    if (!this.target) { return; }\n\n    const { x, y } = this.target.get<Placeable>('Placeable');\n    this.nextPosX = x * Constants.TILE_SIZE - canvas.width/2 + Constants.TILE_SIZE/2;\n    this.nextPosY = y * Constants.TILE_SIZE - canvas.height/2 + Constants.TILE_SIZE/2;\n  }\n\n  private snapToTarget(canvas: Canvas) {\n    const { x, y } = this.target.get<Placeable>('Placeable');\n    this.x = -x * Constants.TILE_SIZE + canvas.width/2 - Constants.TILE_SIZE/2;\n    this.y = -y * Constants.TILE_SIZE + canvas.height/2 - Constants.TILE_SIZE/2;\n    this.snap = false;\n  }\n}\n\nexport default Camera;\n","import Component, { ComponentId } from './components';\n\nclass Entity {\n  public readonly id: number;\n\n  private static sequence: number = 0;\n  private components: Component[];\n\n  constructor(public name: string = 'Entity') {\n    this.id = Entity.sequence++;\n    this.components = [];\n  }\n\n  public is(component: Component): void {\n    const key = this.getKey(component);\n    this.components[key] = component;\n  }\n\n  public isNot(component: Component) {\n    const key = this.getKey(component);\n    delete this.components[key];\n  }\n\n  public get<T extends Component>(name: ComponentId): T | null {\n    return this.components[name];\n  }\n\n  public getComponentIds(): ComponentId[] {\n    return Object.keys(this.components) as ComponentId[];\n  }\n\n  public isDrawable(): boolean {\n    return Boolean(\n      Object.values(this.components).find(\n        (component: Component) => 'isDrawable' in component\n      )\n    );\n  }\n\n  public isTile(): boolean {\n    return Boolean(\n      Object.values(this.components).find(\n        (component: Component) => 'isTile' in component\n      )\n    );\n  }\n\n  private getKey(component: Component): string {\n    return component.id;\n  }\n}\n\nexport default Entity;\n","class Component {\n  constructor(public readonly id: string) {}\n}\n\nexport default Component;\n","import Component from './Component';\n\nclass Placeable extends Component {\n  constructor(\n    public x: number = 0,\n    public y: number = 0,\n  ) {\n    super('Placeable');\n  }\n\n  public set(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nexport default Placeable;","import Component from './Component';\n\nclass Colorable extends Component {\n  constructor(\n    public color: string = 'hotpink',\n  ) {\n    super('Colorable');\n  }\n}\n\nexport default Colorable;\n","import Component from './Component';\n\nclass Drawable extends Component {\n  public isDrawable: boolean = true;\n}\n\nexport default Drawable;\n","import Constants from '../../Constants';\nimport Drawable from './Drawable';\n\nclass Shape extends Drawable {\n  public width: number;\n  public height: number;\n\n  constructor(width: number, height: number) {\n    super('Shape');\n    this.width = width * Constants.TILE_SIZE;\n    this.height = height * Constants.TILE_SIZE;\n  }\n}\n\nexport default Shape;\n","import Shape from './Shape';\n\nclass ShapeHuman extends Shape {\n  constructor() {\n    super(1, 1);\n  }\n}\n\nexport default ShapeHuman;\n","import Component from './Component';\n\nclass Player extends Component {\n  constructor() {\n    super('Player');\n  }\n}\n\nexport default Player;\n","import Drawable from './Drawable';\n\nclass Tile extends Drawable {\n  public readonly isTile: boolean = true;\n\n  constructor() {\n    super('Tile');\n  }\n}\n\nexport default Tile;\n\n\n\n","import Drawable from './Drawable';\n\nclass Solid extends Drawable {\n  constructor() {\n    super('Solid');\n  }\n}\n\nexport default Solid;\n\n\n\n","import Component from './Component';\n\nclass Movable extends Component {\n  public lastPosX: number;\n  public lastPosY: number;\n\n  constructor(\n    public moveToX: number = 0,\n    public moveToY: number = 0,\n  ) {\n    super('Movable');\n  }\n\n  public moveTo(x: number, y: number) {\n    this.moveToX = x;\n    this.moveToY = y;\n  }\n\n  public hasMovement(): boolean {\n    return Boolean(this.moveToX || this.moveToY);\n  }\n\n  public reset(): void {\n    this.moveToX = this.moveToY = 0;\n  }\n}\n\nexport default Movable;","import Component from './Component';\n\nclass Collidable extends Component {\n  constructor() {\n    super('Collidable');\n  }\n}\n\nexport default Collidable;","import { Colorable, Placeable, Player, ShapeHuman, Movable, Collidable } from './components';\nimport Entity from './Entity';\n\nclass EntityPlayer extends Entity {\n  public static create(name: string = 'Player'): EntityPlayer {\n    const player = new EntityPlayer(name);\n    player.is(new Placeable(1, 1));\n    player.is(new Colorable('green'));\n    player.is(new ShapeHuman());\n    player.is(new Player());\n    player.is(new Movable());\n    player.is(new Collidable());\n\n    return player;\n  }\n\n  private constructor(name: string) {\n    super(name);\n  }\n}\n\nexport default EntityPlayer;\n","import { Placeable, Shape, Tile } from './components';\nimport Entity from './Entity';\n\nclass EntityTile extends Entity {\n  public static create(x: number, y: number): EntityTile {\n    const tile = new EntityTile();\n    tile.is(new Tile());\n    tile.is(new Shape(1, 1));\n    tile.is(new Placeable(x, y));\n\n    return tile;\n  }\n\n  constructor() {\n    super('Tile');\n  }\n}\n\nexport default EntityTile;\n","import { Colorable } from './components';\nimport EntityTile from './EntityTile';\n\nclass EntityFloor extends EntityTile {\n  public static readonly SIZE: number = 32;\n\n  public static create(x: number, y: number): EntityFloor {\n    const tile = EntityTile.create(x, y);\n    tile.is(new Colorable('hotpink'));\n    return tile;\n  }\n}\n\nexport default EntityFloor;\n","import { Collidable, Colorable, Solid } from './components';\nimport Entity from './Entity';\nimport EntityTile from './EntityTile';\n\nclass EntityWall extends EntityTile {\n  public static readonly SIZE: number = 32;\n\n  public static create(x: number, y: number): EntityWall {\n    const tile = EntityTile.create(x, y);\n    tile.is(new Colorable('blue'));\n    tile.is(new Solid());\n    tile.is(new Collidable());\n\n    return tile;\n  }\n}\n\nexport default EntityWall;\n","import { Collidable, Colorable, Placeable, Shape } from './components';\nimport Entity from './Entity';\n\nclass EntityDialer extends Entity {\n  public static create(): EntityDialer {\n    const dialer = new EntityDialer('Dialer');\n    dialer.is(new Placeable(1, 1));\n    dialer.is(new Colorable('cyan'));\n    dialer.is(new Shape(1, 1));\n    dialer.is(new Collidable());\n\n    return dialer;\n  }\n\n  private constructor(name: string) {\n    super(name);\n  }\n}\n\nexport default EntityDialer;\n","import { ComponentId } from './../components';\nimport Entity from '../Entity';\nimport Canvas from '../../engine/Canvas';\nimport Graphics from '../../engine/graphics';\nimport Input from '../../engine/input';\n\nconst hasAllComponents = (a: ComponentId[], b: ComponentId[]) => (\n  a.filter((x) => b.includes(x)).length === b.length\n);\n\nclass System {\n  public static for(entity: Entity): System {\n    return new System(entity);\n  }\n\n  public render(canvas: Canvas, g: Graphics): void {}\n\n  public update(input: Input, delta: number, canvas: Canvas): void {}\n\n  public shouldRun(): System | null {\n    const entityComponents = this.entity.getComponentIds();\n    if (hasAllComponents(entityComponents, this.requires)) {\n      return this;\n    }\n\n    return null;\n  }\n\n  public get requires (): ComponentId[] {\n    return [];\n  }\n\n  protected constructor(\n    protected entity: Entity,\n  ) {}\n}\n\nexport default System;\n","import Constants from '../../Constants';\nimport Canvas from '../../engine/Canvas';\nimport Graphics from '../../engine/graphics';\nimport { Colorable, Placeable, Shape, ComponentId } from '../components';\nimport Entity from '../Entity';\nimport System from './System';\n\nclass RendererSystem extends System {\n  public static for(entity: Entity): RendererSystem {\n    return new RendererSystem(entity);\n  }\n\n  public render(canvas: Canvas, g: Graphics): void {\n    const color = this.getColor();\n    const { x, y } = this.getPosition();\n    const { width, height } = this.getSizes();\n\n    const renderPosX = Math.round(x * Constants.TILE_SIZE + canvas.camera?.x);\n    const renderPosY = Math.round(y * Constants.TILE_SIZE + canvas.camera?.y);\n    g.color(color).translate(renderPosX, renderPosY).rect(0, 0, width, height);\n  }\n\n  public get requires (): ComponentId[] {\n    return ['Placeable', 'Shape'];\n  }\n\n  private getColor(): string {\n    return this.entity.get<Colorable>('Colorable')?.color || 'white';\n  }\n\n  private getPosition(): Placeable {\n    return this.entity.get<Placeable>('Placeable');\n  }\n\n  private getSizes(): Shape {\n    return this.entity.get<Shape>('Shape');\n  }\n}\n\nexport default RendererSystem;\n","import { Canvas } from '~engine';\nimport { ComponentId, Movable } from './../components';\nimport Input from '../../engine/input';\nimport Entity from '../Entity';\nimport System from './System';\n\nclass KeyboardSystem extends System {\n  public static for(entity: Entity): KeyboardSystem {\n    return new KeyboardSystem(entity);\n  }\n\n  public update(input: Input, delta: number, canvas: Canvas): void {\n    if (input.isKeyPressed('w')) {\n      this.moveEntity(0, -1);\n    }\n    else if (input.isKeyPressed('s')) {\n      this.moveEntity(0, 1);\n    }\n    else if (input.isKeyPressed('a')) {\n      this.moveEntity(-1, 0);\n    }\n    else if (input.isKeyPressed('d')) {\n      this.moveEntity(1, 0);\n    }\n  }\n\n  public get requires (): ComponentId[] {\n    return ['Placeable', 'Movable', 'Player'];\n  }\n\n  private moveEntity(x: number, y: number) {\n    const mover = this.entity.get<Movable>('Movable');\n    mover.moveTo(x, y);\n  }\n}\n\nexport default KeyboardSystem;\n","import { Placeable } from '~entities/components';\nimport { Canvas } from '~engine';\nimport { ComponentId, Movable } from './../components';\nimport Input from '../../engine/input';\nimport Entity from '../Entity';\nimport System from './System';\n\nclass MovementSystem extends System {\n  public static for(entity: Entity): MovementSystem {\n    return new MovementSystem(entity);\n  }\n\n  public update(input: Input, delta: number, canvas: Canvas): void {\n    const movement = this.getMovement();\n    if (movement.hasMovement()) {\n      const position = this.getPosition();\n      movement.lastPosX = position.x;\n      movement.lastPosY = position.y;\n      position.x += movement.moveToX;\n      position.y += movement.moveToY;\n      movement.reset();\n    }\n  }\n\n  public get requires (): ComponentId[] {\n    return ['Placeable', 'Movable'];\n  }\n\n  private getMovement(): Movable {\n    return this.entity.get<Movable>('Movable');\n  }\n\n  private getPosition(): Placeable {\n    return this.entity.get<Placeable>('Placeable');\n  }\n}\n\nexport default MovementSystem;\n","import { Collidable, Placeable } from '~entities/components';\nimport { Canvas } from '~engine';\nimport { ComponentId, Movable } from './../components';\nimport Input from '../../engine/input';\nimport Entity from '../Entity';\nimport System from './System';\n\nclass CollisionSystem extends System {\n  private entities: Entity[];\n\n  public static for(entity: Entity): CollisionSystem {\n    return new CollisionSystem(entity);\n  }\n\n  public with(entities: Entity[]): CollisionSystem {\n    this.entities = entities;\n    return this;\n  }\n\n  public update(input: Input, delta: number, canvas: Canvas): void {\n    const position = this.getPosition();\n    this.entities.forEach((entity) => {\n      if (entity.id === this.entity.id) { return; }\n      const pos = entity.get<Placeable>('Placeable');\n      const dx = pos.x - position.x;\n      const dy = pos.y - position.y;\n      \n      if (Math.sqrt(dx*dx + dy*dy) <= 0) {\n        console.log(this.entity.name, 'collided with', entity.name);\n\n        const mover = this.getMovement();\n        if (mover) {\n          position.x = mover.lastPosX;\n          position.y = mover.lastPosY;\n        }\n      }\n    });\n  }\n\n  public get requires (): ComponentId[] {\n    return ['Placeable', 'Collidable'];\n  }\n\n  private getMovement(): Movable {\n    return this.entity.get<Movable>('Movable');\n  }\n\n  private getPosition(): Placeable {\n    return this.entity.get<Placeable>('Placeable');\n  }\n}\n\nexport default CollisionSystem;\n","export interface Room {\n  doors: {\n    top: boolean,\n    bottom: boolean,\n    left: boolean,\n    right: boolean,\n  },\n  tiles: number[][];\n};\n\ntype WhereProp = 'top' | 'bottom' | 'left' | 'right' | null;\n\nclass WorldRoom {\n  public static getRandomRoom(where?: WhereProp): Room {\n    const possibleRooms = WorldRoom[where || 'rooms'];\n    const length = possibleRooms.length - 1;\n    const index = Math.round(Math.random() * length);\n    return possibleRooms[index];\n  }\n\n  public static get top(): Room[] {\n    return [WorldRoom.TOP, WorldRoom.TOP_LEFT, WorldRoom.TOP_RIGHT, WorldRoom.TOP_BOTTOM];\n  }\n\n  public static get bottom(): Room[] {\n    return [WorldRoom.BOTTOM, WorldRoom.BOTTOM_LEFT, WorldRoom.BOTTOM_RIGHT, WorldRoom.TOP_BOTTOM];\n  }\n\n  public static get left(): Room[] {\n    return [WorldRoom.LEFT, WorldRoom.TOP_LEFT, WorldRoom.BOTTOM_LEFT, WorldRoom.LEFT_RIGHT];\n  }\n\n  public static get right(): Room[] {\n    return [WorldRoom.RIGHT, WorldRoom.TOP_RIGHT, WorldRoom.BOTTOM_RIGHT, WorldRoom.LEFT_RIGHT];\n  }\n\n  public static get rooms(): Room[] {\n    return [\n      WorldRoom.CENTER,\n      WorldRoom.LEFT,\n      WorldRoom.RIGHT,\n      WorldRoom.TOP,\n      WorldRoom.BOTTOM,\n      WorldRoom.TOP_LEFT,\n      WorldRoom.TOP_RIGHT,\n      WorldRoom.TOP_BOTTOM,\n      WorldRoom.BOTTOM_LEFT,\n      WorldRoom.BOTTOM_RIGHT,\n      WorldRoom.LEFT_RIGHT,\n    ];\n  }\n\n  public static get CENTER(): Room {\n    return {\n      doors: {\n        top: true,\n        bottom: true,\n        left: true,\n        right: true,\n      },\n      tiles: [\n        [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],\n      ],\n    };\n  }\n\n  public static get LEFT(): Room {\n    return {\n      doors: {\n        top: false,\n        bottom: false,\n        left: true,\n        right: false,\n      },\n      tiles: [\n        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      ],\n    };\n  }\n\n  public static get RIGHT(): Room {\n    return {\n      doors: {\n        top: false,\n        bottom: false,\n        left: false,\n        right: true,\n      },\n      tiles: [\n        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      ],\n    };\n  }\n\n  public static get TOP(): Room {\n    return {\n      doors: {\n        top: true,\n        bottom: false,\n        left: false,\n        right: false,\n      },\n      tiles: [\n        [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      ],\n    };\n  }\n\n  public static get BOTTOM(): Room {\n    return {\n      doors: {\n        top: false,\n        bottom: true,\n        left: false,\n        right: false,\n      },\n      tiles: [\n        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],\n      ],\n    };\n  }\n\n  public static get TOP_LEFT(): Room {\n    return {\n      doors: {\n        top: true,\n        bottom: false,\n        left: true,\n        right: false,\n      },\n      tiles: [\n        [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      ],\n    };\n  }\n\n  public static get TOP_RIGHT(): Room {\n    return {\n      doors: {\n        top: true,\n        bottom: false,\n        left: false,\n        right: true,\n      },\n      tiles: [\n        [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      ],\n    };\n  }\n\n  public static get TOP_BOTTOM(): Room {\n    return {\n      doors: {\n        top: true,\n        bottom: true,\n        left: false,\n        right: false,\n      },\n      tiles: [\n        [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],\n      ],\n    };\n  }\n\n  public static get BOTTOM_LEFT(): Room {\n    return {\n      doors: {\n        top: false,\n        bottom: true,\n        left: true,\n        right: false,\n      },\n      tiles: [\n        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],\n      ],\n    };\n  }\n\n  public static get BOTTOM_RIGHT(): Room {\n    return {\n      doors: {\n        top: false,\n        bottom: true,\n        left: false,\n        right: true,\n      },\n      tiles: [\n        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],\n      ],\n    };\n  }\n\n  public static get LEFT_RIGHT(): Room {\n    return {\n      doors: {\n        top: false,\n        bottom: false,\n        left: true,\n        right: true,\n      },\n      tiles: [\n        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      ],\n    };\n  }\n}\n\nexport default WorldRoom;\n","import { EntityFloor, EntityWall } from '../entities';\nimport Constants from '../Constants';\nimport World from './World';\n\nclass WorldMap {\n  public static readonly NONE = 0;\n  public static readonly FLOOR = 1;\n  public static readonly WALL = 2;\n\n  public spawnX: number;\n  public spawnY: number;\n\n  private map: number[][];\n\n  constructor(public size: number = 128) {\n    this.reset();\n  }\n\n  public setTile(x: number, y: number, type: number) {\n    if (this.map[x] !== undefined && this.map[x][y] !== undefined) {\n      this.map[x][y] = type;\n    }\n  }\n\n  public getTile(x: number, y: number): number | null {\n    return this.map[x] && this.map[x][y];\n  }\n\n  public setSpawn(x: number, y: number): void {\n    this.spawnX = x;\n    this.spawnY = y;\n  }\n\n  public registerComponents(world: World): void {\n    this.map.forEach((row, x) => {\n      row.forEach((id, y) => {\n        if (id === WorldMap.WALL) {\n          world.spawn(EntityWall.create(x, y))\n          return;\n        }\n\n        if (id === WorldMap.FLOOR) {\n          world.spawn(EntityFloor.create(x, y));\n        }\n      });\n    });\n  }\n\n  public reset(): void {\n    this.map = Array(this.size).fill(0).map(\n      () => Array(this.size).fill(0).map(() => WorldMap.NONE)\n    );\n  }\n}\n\nexport default WorldMap;\n","import WorldMap from '~world/WorldMap';\n\nabstract class Generator {\n  public abstract generate(): WorldMap;\n}\n\nexport default Generator;\n","import World from '~world';\nimport WorldMap from '../WorldMap';\nimport Generator from './Generator';\nimport * as Entities from '../../entities';\n\ninterface SpaceshipEntity {\n  x: number;\n  y: number;\n  name: string;\n}\n\ninterface SpaceshipModel {\n  name: string;\n  spawn: { x: number, y: number };\n  tiles: number[][];\n  entities?: SpaceshipEntity[];\n};\n\nclass GeneratorSpaceship extends Generator {\n  private model: SpaceshipModel\n\n  public static for(world: World): GeneratorSpaceship {\n    return new GeneratorSpaceship(world);\n  }\n\n  public use(model: SpaceshipModel): GeneratorSpaceship {\n    this.model = model;\n    return this;\n  }\n\n  public generate(): WorldMap {\n    const map: WorldMap = new WorldMap(this.size());\n    this.generateFromTemplate(map);\n    this.generateEntities(map);\n\n    return map;\n  }\n\n  private generateFromTemplate(map: WorldMap): void {\n    map.setSpawn(this.model.spawn.x, this.model.spawn.y);\n\n    for(let i=0; i < this.modelWidth(); i++) {\n      for(let j=0; j < this.modelHeight(); j++) {\n        map.setTile(i, j, this.model.tiles[i][j])\n      }\n    }\n  }\n\n  private generateEntities(map: WorldMap): void {\n    this.model.entities?.map(({ name, x, y }) => {\n      this.world.spawn(Entities[name].create(), x, y);\n    });\n  }\n\n  private modelWidth(): number {\n    return this.model.tiles.length;\n  }\n\n  private modelHeight(): number {\n    return this.model.tiles[0].length;\n  }\n\n  private size(): number {\n    return Math.max(this.modelWidth(), this.modelHeight());\n  }\n\n  private constructor(private world: World) {\n    super();\n  }\n}\n\nexport default GeneratorSpaceship;\n","export default {\n  name: 'Daedalus',\n  spawn: { x: 54, y: 16 },\n  entities: [\n    { x: 4, y: 16, name: 'EntityDialer' },\n  ],\n  tiles: [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  \n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  \n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  \n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  \n    [0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0],\n    [0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 0, 0],\n    [0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n  \n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n  \n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    \n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 0, 0, 0, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0],\n  ],\n};\n","import { Canvas } from '~engine';\nimport { GeneratorSpaceship } from '../generators';\nimport World from '../World';\nimport daedalus from './models/daedalus';\n\nclass Spaceship extends World {\n  constructor(name: string = 'My Ship') {\n    super(name);\n  }\n\n  public init(canvas: Canvas): void {\n    this.map = GeneratorSpaceship.for(this).use(daedalus).generate();\n    this.map.registerComponents(this);\n    this.addPlayer();\n  }\n}\n\nexport default Spaceship;\n","import Entity, { EntityPlayer } from '../entities';\nimport { CollisionSystem, KeyboardSystem, MovementSystem, RendererSystem } from '../entities/systems';\nimport { Canvas, Renderer, Updater } from '../engine';\nimport Input from '../engine/input';\nimport Graphics from '../engine/graphics';\nimport WorldGenerate from './WorldGenerate';\nimport { Collidable, Placeable } from '~entities/components';\nimport WorldMap from './WorldMap';\n\nclass World implements Renderer, Updater {\n  protected map: WorldMap;\n  protected player: Entity;\n\n  private entities: Entity[];\n  private drawable: Entity[];\n  private colliable: Entity[];\n\n  constructor(public name: string = 'World') {\n    this.entities = [];\n    this.drawable = [];\n    this.colliable = [];\n  }\n\n  public init(canvas: Canvas): void {\n    this.map = WorldGenerate.generate(120);\n    this.map.registerComponents(this);\n    this.addPlayer();\n  }\n\n  public render(canvas: Canvas, g: Graphics): void {\n    this.drawable.forEach((entity) => {\n      RendererSystem.for(entity).render(canvas, g);\n    });\n  }\n\n  public update(input: Input, delta: number, canvas: Canvas): void {\n    this.entities.forEach((entity) => {\n      KeyboardSystem.for(entity).shouldRun()?.update(input, delta, canvas);\n      MovementSystem.for(entity).shouldRun()?.update(input, delta, canvas);\n      CollisionSystem.for(entity).with(this.colliable).shouldRun()?.update(input, delta, canvas);\n    });\n  }\n\n  public spawn(entity: Entity, x?: number, y?: number): void {\n    if (x !== undefined && y !== undefined) {\n      const position = entity.get<Placeable>('Placeable');\n      position?.set(x, y);\n    }\n\n    if (entity.get<Collidable>('Collidable')) {\n      this.colliable[entity.id] = entity;\n    }\n\n    if (entity.isDrawable()) {\n      this.draw(entity);\n    }\n\n    this.entities[entity.id] = entity;\n  }\n\n  public getPlayer(): EntityPlayer {\n    return this.player;\n  }\n\n  protected addPlayer(): void {\n    const { spawnX, spawnY } = this.map;\n    this.player = EntityPlayer.create('Vornian');\n    this.spawn(this.player, spawnX, spawnY);\n  }\n\n  private draw(entity: Entity): void {\n    if (entity.isTile()) {\n      this.drawable.unshift(entity);\n      return;\n    }\n\n    this.drawable.push(entity);\n  }\n}\n\nexport default World;\n","import WorldRoom, { Room } from './WorldRoom';\nimport WorldMap from './WorldMap';\n\nclass WorldGenerate {\n  public static generate(size: number = 128): WorldMap {\n    const map: WorldMap = new WorldMap(size);\n    this.generateRooms(map);\n\n    return map;\n  }\n\n  private static generateRooms(map: WorldMap): void {\n    const rooms: Room[][] = Array(2).fill(0).map(() => Array(2));\n    \n    const spawnPoints = [\n      { x: Math.round(map.size/2) - 5, y: Math.round(map.size/2) - 5, direction: null },\n    ];\n    const roomPoints = [Object.values(spawnPoints[0]).join(',')];\n\n    map.setSpawn(spawnPoints[0].x + 5, spawnPoints[0].y + 5);\n\n    while (spawnPoints.length > 0) {\n      const { x, y, direction } = spawnPoints.shift();\n\n      if (roomPoints.includes([x, y].join(','))) {\n        continue;\n      }\n\n      const room = direction ? WorldRoom.getRandomRoom(direction) : WorldRoom.CENTER;\n      this.placeRoom(x, y, room, map);\n      roomPoints.push([x, y].join(','));\n\n      if (room.doors.top) {\n        spawnPoints.push({ x, y: y - 10, direction: 'bottom' });\n      }\n\n      if (room.doors.bottom) {\n        spawnPoints.push({ x, y: y + 10, direction: 'top' });\n      }\n\n      if (room.doors.left) {\n        spawnPoints.push({ x: x - 10, y, direction: 'right' });\n      }\n\n      if (room.doors.right) {\n        spawnPoints.push({ x: x + 10, y, direction: 'left' });\n      }\n    }\n  }\n\n  private static placeRoom(x: number, y: number, room: Room, map: WorldMap) {\n    for(let i=0; i < 11; i++) {\n      for(let j=0; j < 11; j++) {\n        const isFloor = room.tiles[j][i] === 0;\n        const tile = isFloor ? WorldMap.FLOOR : WorldMap.WALL;\n        map.setTile(x + i, y + j, tile);\n      }\n    }\n  }\n}\n\nexport default WorldGenerate;\n","import { Renderer, Updater, Canvas } from '~engine';\nimport Graphics from '~engine/graphics';\nimport Input from '~engine/input';\nimport { EntityPlayer } from '~entities';\nimport Spaceship from './spaceship';\nimport World from './World';\n\nclass WorldManager implements Renderer, Updater {\n  private worlds: Map<string, World>;\n  private current: World;\n\n  constructor() {\n    this.worlds = new Map<string, World>();\n  }\n\n  public init(canvas: Canvas): void {\n    this.createAndInitSpaceship(canvas);\n  }\n\n  public render(canvas: Canvas, g: Graphics): void {\n    this.current?.render(canvas, g);\n\n    g.color('white').text('center', 0, this.current?.name);\n  }\n\n  public update(input: Input, delta: number, canvas: Canvas): void {\n    this.current?.update(input, delta, canvas);\n  }\n\n  public getPlayer(): EntityPlayer {\n    return this.current?.getPlayer();\n  }\n\n  private createAndInitSpaceship(canvas: Canvas): void {\n    this.worlds['spaceship'] = new Spaceship();\n    this.worlds['spaceship'].init(canvas);\n    this.current = this.worlds['spaceship'];\n  }\n}\n\nexport default WorldManager;\n","import WebGame from './engine/WebGame';\nimport Hagokia from './Hagokia';\n\nconst canvas = document.getElementById('canvas'); \nconst webGame = new WebGame(canvas as HTMLCanvasElement);\nwebGame.init(new Hagokia());\n","import Game from './Game'\nimport Canvas from './Canvas';\nimport Graphics from './graphics';\nimport Input from './input';\n\nclass WebGame {\n  private canvas: Canvas;\n  private ctx: CanvasRenderingContext2D;\n\n  private graphics: Graphics;\n  private input: Input;\n\n  private game: Game;\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = Canvas.fromHTMLCanvas(canvas);\n    this.ctx = canvas.getContext('2d');\n    this.ctx.imageSmoothingEnabled = true;\n    this.ctx.imageSmoothingQuality = 'high';\n  }\n\n  public init(game: Game): void {\n    this.game = game;\n    this.graphics = new Graphics(this.canvas, this.ctx);\n    this.input = new Input();\n\n    this.game.init(this.canvas);\n    this.requestAnimationFrame();\n  }\n\n  private gameLoop(): void {\n    this.game.update(this.input, 1.0, this.canvas);\n    this.input.keyboard.pool();\n\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.game.render(this.canvas, this.graphics);\n\n    this.requestAnimationFrame();\n  }\n\n  private requestAnimationFrame(): void {\n    window.requestAnimationFrame(this.gameLoop.bind(this));\n  }\n}\n\nexport default WebGame;\n","import { Canvas, Game, Camera } from './engine';\nimport Graphics from './engine/graphics';\nimport Input from './engine/input';\nimport { WorldManager } from './world';\n\nclass Hagokia implements Game {\n  private worldManager: WorldManager;\n  private camera: Camera;\n\n  constructor() {\n    this.worldManager = new WorldManager();\n    this.camera = new Camera();\n  }\n\n  init(canvas: Canvas): void {\n    console.log('Game init.');\n\n    this.worldManager.init(canvas);\n\n    canvas.useCamera(this.camera);\n    this.camera.follow(this.worldManager.getPlayer());\n  }\n\n  render(canvas: Canvas, g: Graphics): void {\n    this.worldManager.render(canvas, g);\n  }\n\n  update(input: Input, delta: number, canvas: Canvas): void {\n    this.worldManager.update(input, delta, canvas);\n    this.camera.update(input, delta, canvas);\n  }\n}\n\nexport default Hagokia;\n"],"names":["$parcel$export","e","n","v","Object","defineProperty","get","enumerable","$546701f85e14d9de58b49f17977dbafe$export$default","width","height","htmlCanvas","canvas","onWindowResize","window","innerWidth","innerHeight","addEventListener","bind","this","useCamera","camera","constructor","$94aab8f2e4b993907dcded5749710bb3$export$default","ctx","font","save","restore","translate","x","y","rotate","deg","color","fillStyle","rect","fillRect","resetTransform","text","measureText","fillText","$47a8dd1e0cb0bb7a035171056d2c3144$export$default","states","createEventsListeners","pool","keys","forEach","key","findNextState","onKeyDown","onKeyUp","DOWN","PRESSED","UP","NONE","$a8a9c7993fa6e327e6ab4be019cdc2ca$export$default","keyboard","console","log","isKeyDown","isKeyUp","isKeyPressed","$b74a9ba2b83f33f0a0d1b71b22617aa4$export$default","$8e7a75341a90ca59a8425e50c4961470$export$default","THRESHOLD","SPEED","snap","nextPosX","nextPosY","follow","entity","target","update","input","delta","snapToTarget","centerTargetIfExists","dx","dy","length","Math","sqrt","unitX","unitY","TILE_SIZE","$afb7bd5bdc83073c5a824ff443ec7526$export$default","name","id","sequence","components","is","component","getKey","isNot","getComponentIds","isDrawable","Boolean","values","find","isTile","$98c03d64ce00a231b63a1ac6884bcf5e$export$default","$1f302363ba0701e0a5c8cf8e4eb553a2$export$default","super","set","$58d111a5e9b34cdde4428027c04eb0a8$export$default","$7878ce8de8df49fa125ed0fe6d22beb2$export$default","$32e7dd13a75f28548f81f6803b3a3a30$export$default","$df5346b90ca4519f134aaa61c2a639a0$export$default","$02447c7afa2ee3dbd01b1fc9275aa7df$export$default","$bb8f4303bfce493a624c29b5fbc34789$export$default","$c80c9301aaf5c5d9e889941aefc9e1d4$export$default","$649b2759829ea2c8037e1077c550a0b7$export$default","moveToX","moveToY","moveTo","hasMovement","reset","$a214d47d3ba089c2aeb1b73853945191$export$default","$2670e351154e299705e0b8760bb1b2c7$export$default","player","$16d88d33cc2be75f9e901e165847c4f9$export$default","tile","$5c293f3ec1964db8fdf1020969007b3b$export$default","create","$a23986a5521a12e48e39e646c037ca3c$export$default","$64c348853696168fb819ba4eabb1917d$export$default","dialer","$739fdd702465aa160fdeadf89b52dfa8$export$default","render","g","shouldRun","entityComponents","a","b","requires","filter","includes","$c830817a4e2510e2b61f402ca4f355bc$export$default","getColor","getPosition","getSizes","renderPosX","round","renderPosY","$55687d21aa8bbbd04aaccc016f11b8ef$export$default","moveEntity","$74351ef5a335db05e5983c375faba99b$export$default","movement","getMovement","position","lastPosX","lastPosY","$d2a6c68c53b2c0a7a3607b6f6e4188d1$export$default","with","entities","pos","mover","$81b759fafc70f1773113da92435ee4fe$export$default","where","possibleRooms","random","TOP","TOP_LEFT","TOP_RIGHT","TOP_BOTTOM","BOTTOM","BOTTOM_LEFT","BOTTOM_RIGHT","LEFT","LEFT_RIGHT","RIGHT","CENTER","doors","top","bottom","left","right","tiles","$c7baf97dca1f6620504a51ab300f5a8d$export$default","size","setTile","type","undefined","map","getTile","setSpawn","spawnX","spawnY","registerComponents","world","row","WALL","FLOOR","spawn","Array","fill","$0990c2f8af04cec994ff104ccc7dc826$export$default","$7983cf823643090df90254d67b06cc64$export$default","use","model","generate","generateFromTemplate","generateEntities","i","modelWidth","j","modelHeight","max","$d7343af0385ddfc0539423d94388605b$export$default","drawable","colliable","init","generateRooms","spawnPoints","direction","roomPoints","join","shift","room","getRandomRoom","placeRoom","push","isFloor","addPlayer","for","draw","getPlayer","unshift","$e7bc2b473e59e025c63495b210d5c4a6$export$default","worlds","Map","createAndInitSpaceship","current","$8d10e2b035c8e6d9dff8f94d4db9d773$var$canvas","document","getElementById","$8d10e2b035c8e6d9dff8f94d4db9d773$var$webGame","fromHTMLCanvas","getContext","imageSmoothingEnabled","imageSmoothingQuality","game","graphics","requestAnimationFrame","gameLoop","clearRect","worldManager"],"version":3,"file":"index.daf323d9.js.map"}