class t{width=800;height=600;static fromHTMLCanvas(e){const{width:s,height:i}=e,r=new t(s,i),o=()=>{e.width=window.innerWidth,e.height=window.innerHeight,r.onWindowResize()};return window.addEventListener("resize",o.bind(this)),o(),r}useCamera(t){return this.camera=t,this}constructor(t,e){this.width=t,this.height=e}onWindowResize(){this.width=window.innerWidth,this.height=window.innerHeight}}class e{constructor(t,e){this.canvas=t,this.ctx=e}save(){return this.ctx.save(),this}restore(){return this.ctx.restore(),this}translate(t,e){return this.ctx.translate(t,e),this}rotate(t){return this.ctx.rotate(t),this}color(t){return this.ctx.fillStyle=t,this}rect(t,e,s,i){return this.ctx.fillRect(t,e,s,i),this.ctx.resetTransform(),this}}class s{static NONE=0;static UP=1;static DOWN=2;static PRESSED=3;constructor(t=[]){this.states=t,this.createEventsListeners()}pool(){Object.keys(this.states).forEach((t=>{this.states[t]=this.findNextState(t)}))}createEventsListeners(){window.addEventListener("keydown",this.onKeyDown.bind(this)),window.addEventListener("keyup",this.onKeyUp.bind(this))}onKeyDown({key:t}){this.states[t]!==s.DOWN&&(this.states[t]=s.PRESSED)}onKeyUp({key:t}){this.states[t]=s.UP}findNextState(t){switch(this.states[t]){case s.UP:return s.NONE;case s.PRESSED:case s.DOWN:return s.DOWN;default:return s.PRESSED}}}class i{constructor(){this.keyboard=new s,console.log("Inputs init.")}isKeyDown(t){return!1}isKeyUp(t){return!1}isKeyPressed(t){return this.keyboard.states[t]===s.PRESSED}}class r{static TILE_SIZE=32}class o{constructor(t=0,e=0){this.x=t,this.y=e}follow(t){this.target=t}update(t,e,s){this.centerTargetIfExists(s)}centerTargetIfExists(t){if(!this.target)return;const{x:e,y:s}=this.target.get("Placeable");this.x=-e*r.TILE_SIZE+t.width/2,this.y=-s*r.TILE_SIZE+t.height/2}}class n{static sequence=0;constructor(t="Entity"){this.name=t,this.id=n.sequence++,this.components=[]}is(t){const e=this.getKey(t);this.components[e]=t}isNot(t){const e=this.getKey(t);delete this.components[e]}get(t){return this.components[t]}getComponentIds(){return Object.keys(this.components)}isDrawable(){return Boolean(Object.values(this.components).find((t=>"isDrawable"in t)))}getKey(t){return t.id}}class a{constructor(t){this.id=t}}class h extends a{constructor(t=0,e=0){super("Placeable"),this.x=t,this.y=e}set(t,e){this.x=t,this.y=e}}class c extends a{constructor(t="hotpink"){super("Colorable"),this.color=t}}class l extends a{isDrawable=!0}class u extends l{constructor(t,e){super("Shape"),this.width=t*r.TILE_SIZE,this.height=e*r.TILE_SIZE}}class d extends u{constructor(){super(1,1)}}class T extends a{constructor(){super("Player")}}class g extends l{constructor(){super("Tile")}}class m extends l{constructor(){super("Solid")}}class p extends a{constructor(t=0,e=0){super("Movable"),this.moveToX=t,this.moveToY=e}moveTo(t,e){this.moveToX=t,this.moveToY=e}hasMovement(){return Boolean(this.moveToX||this.moveToY)}reset(){this.moveToX=0,this.moveToY=0}}class w extends n{static create(t="Player"){const e=new w(t);return e.is(new h(1,1)),e.is(new c("green")),e.is(new d),e.is(new T),e.is(new p),e}constructor(t){super(t)}}class E extends n{static create(t,e){const s=new E;return s.is(new g),s.is(new u(1,1)),s.is(new h(t,e)),s}constructor(){super("Tile")}}class y extends E{static SIZE=32;static create(t,e){const s=E.create(t,e);return s.is(new c("hotpink")),s}}class O extends E{static SIZE=32;static create(t,e){const s=E.create(t,e);return s.is(new c("blue")),s.is(new m),s}}class f{static for(t){return new f(t)}render(t,e){}update(t,e,s){}shouldRun(){const t=this.entity.getComponentIds();return e=t,s=this.requires,e.filter((t=>s.includes(t))).length===s.length?this:null;var e,s}get requires(){return[]}constructor(t){this.entity=t}}class v extends f{static for(t){return new v(t)}render(t,e){const s=this.getColor(),{x:i,y:o}=this.getPosition(),{width:n,height:a}=this.getSizes(),h=i*r.TILE_SIZE+t.camera?.x,c=o*r.TILE_SIZE+t.camera?.y;e.color(s).translate(h,c).rect(0,0,n,a)}get requires(){return["Placeable","Shape"]}getColor(){return this.entity.get("Colorable")?.color||"white"}getPosition(){return this.entity.get("Placeable")}getSizes(){return this.entity.get("Shape")}}class x extends f{static for(t){return new x(t)}update(t,e,s){t.isKeyPressed("w")?this.moveEntity(0,-1):t.isKeyPressed("s")?this.moveEntity(0,1):t.isKeyPressed("a")?this.moveEntity(-1,0):t.isKeyPressed("d")&&this.moveEntity(1,0)}get requires(){return["Placeable","Movable","Player"]}moveEntity(t,e){this.entity.get("Movable").moveTo(t,e)}}class b extends f{static for(t){return new b(t)}update(t,e,s){const i=this.getMovement();if(i.hasMovement){const t=this.getPosition();t.x+=i.moveToX,t.y+=i.moveToY,i.reset()}}get requires(){return["Placeable","Movable"]}getMovement(){return this.entity.get("Movable")}getPosition(){return this.entity.get("Placeable")}}class P{static getRandomRoom(t){const e=P[t||"rooms"];console.log(t,e);const s=e.length-1;return e[Math.round(Math.random()*s)]}static get top(){return[P.TOP,P.TOP_LEFT,P.TOP_RIGHT,P.TOP_BOTTOM]}static get bottom(){return[P.BOTTOM,P.BOTTOM_LEFT,P.BOTTOM_RIGHT,P.TOP_BOTTOM]}static get left(){return[P.LEFT,P.TOP_LEFT,P.BOTTOM_LEFT,P.LEFT_RIGHT]}static get right(){return[P.RIGHT,P.TOP_RIGHT,P.BOTTOM_RIGHT,P.LEFT_RIGHT]}static get rooms(){return[P.CENTER,P.LEFT,P.RIGHT,P.TOP,P.BOTTOM,P.TOP_LEFT,P.TOP_RIGHT,P.TOP_BOTTOM,P.BOTTOM_LEFT,P.BOTTOM_RIGHT,P.LEFT_RIGHT]}static get CENTER(){return{doors:{top:!0,bottom:!0,left:!0,right:!0},tiles:[[1,1,1,1,0,0,1,1,1,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,1,1,1,0,0,1,1,1,1]]}}static get LEFT(){return{doors:{top:!1,bottom:!1,left:!0,right:!1},tiles:[[1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1]]}}static get RIGHT(){return{doors:{top:!1,bottom:!1,left:!1,right:!0},tiles:[[1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1]]}}static get TOP(){return{doors:{top:!0,bottom:!1,left:!1,right:!1},tiles:[[1,1,1,1,0,0,1,1,1,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1]]}}static get BOTTOM(){return{doors:{top:!1,bottom:!0,left:!1,right:!1},tiles:[[1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,1,1,1,0,0,1,1,1,1]]}}static get TOP_LEFT(){return{doors:{top:!0,bottom:!1,left:!0,right:!1},tiles:[[1,1,1,1,0,0,1,1,1,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1]]}}static get TOP_RIGHT(){return{doors:{top:!0,bottom:!1,left:!1,right:!0},tiles:[[1,1,1,1,0,0,1,1,1,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1]]}}static get TOP_BOTTOM(){return{doors:{top:!0,bottom:!0,left:!1,right:!1},tiles:[[1,1,1,1,0,0,1,1,1,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,1,1,1,0,0,1,1,1,1]]}}static get BOTTOM_LEFT(){return{doors:{top:!1,bottom:!0,left:!0,right:!1},tiles:[[1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,1,1,1,0,0,1,1,1,1]]}}static get BOTTOM_RIGHT(){return{doors:{top:!1,bottom:!0,left:!1,right:!0},tiles:[[1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,1,1,1,0,0,1,1,1,1]]}}static get LEFT_RIGHT(){return{doors:{top:!1,bottom:!1,left:!0,right:!0},tiles:[[1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1]]}}}class R{static NONE=-1;static FLOOR=0;static WALL=1;constructor(t=128){this.size=t,this.reset()}setTile(t,e,s){void 0!==this.map[t]&&void 0!==this.map[t][e]&&(this.map[t][e]=s)}getTile(t,e){return this.map[t]&&this.map[t][e]}setSpawn(t,e){this.spawnX=t,this.spawnY=e}registerComponents(t){this.map.forEach(((e,s)=>{e.forEach(((e,i)=>{e!==R.WALL?e===R.FLOOR&&t.spawn(y.create(s,i)):t.spawn(O.create(s,i))}))}))}reset(){this.map=Array(this.size).fill(0).map((()=>Array(this.size).fill(0).map((()=>R.NONE))))}}class L{constructor(){this.entities=[],this.entitiesToDraw=[]}init(t){this.map=class{static generate(t=128){const e=new R(t);return this.generateRooms(e),e}static generateRooms(t){Array(2).fill(0).map((()=>Array(2)));const e=[{x:Math.round(t.size/2)-5,y:Math.round(t.size/2)-5,direction:null}],s=[Object.values(e[0]).join(",")];for(t.setSpawn(e[0].x+5,e[0].y+5);e.length>0;){const{x:i,y:r,direction:o}=e.shift();if(s.includes([i,r].join(",")))continue;const n=o?P.getRandomRoom(o):P.CENTER;this.placeRoom(i,r,n,t),s.push([i,r].join(",")),n.doors.top&&e.push({x:i,y:r-9,direction:"bottom"}),n.doors.bottom&&e.push({x:i,y:r+9,direction:"top"}),n.doors.left&&e.push({x:i-9,y:r,direction:"right"}),n.doors.right&&e.push({x:i+9,y:r,direction:"left"})}}static placeRoom(t,e,s,i){for(let r=0;r<10;r++)for(let o=0;o<10;o++){const n=0===s.tiles[o][r]?R.FLOOR:R.WALL;i.setTile(t+r,e+o,n)}}}.generate(120),this.map.registerComponents(this);const{spawnX:e,spawnY:s}=this.map;this.player=w.create("Vornian"),this.spawn(this.player,e,s)}render(t,e){this.entitiesToDraw.forEach((s=>{v.for(s).render(t,e)})),this.entitiesToDraw=[]}update(t,e,s){this.entities.forEach((i=>{x.for(i).shouldRun()?.update?.(t,e,s),b.for(i).shouldRun()?.update?.(t,e,s),i.isDrawable()&&this.draw(i)}))}spawn(t,e,s){if(void 0!==e&&void 0!==s){t.get("Placeable")?.set?.(e,s)}this.entities[t.id]=t}getPlayer(){return this.player}draw(t){this.entitiesToDraw.push(t)}}const I=document.getElementById("canvas");new class{constructor(e){this.canvas=t.fromHTMLCanvas(e),this.ctx=e.getContext("2d"),this.ctx.imageSmoothingEnabled=!0,this.ctx.imageSmoothingQuality="high"}init(t){this.game=t,this.graphics=new e(this.canvas,this.ctx),this.input=new i,this.game.init(this.canvas),this.requestAnimationFrame()}gameLoop(){this.game.update(this.input,1,this.canvas),this.input.keyboard.pool(),this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.game.render(this.canvas,this.graphics),this.requestAnimationFrame()}requestAnimationFrame(){window.requestAnimationFrame(this.gameLoop.bind(this))}}(I).init(new class{constructor(){this.world=new L,this.camera=new o}init(t){console.log("Game init."),this.world.init(t),t.useCamera(this.camera),this.camera.follow(this.world.getPlayer())}render(t,e){this.world.render(t,e)}update(t,e,s){this.world.update(t,e,s),this.camera.update(t,e,s)}});
//# sourceMappingURL=index.4892f020.js.map
