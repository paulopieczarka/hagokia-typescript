function t(t,e,s){Object.defineProperty(t,e,{get:s,enumerable:!0})}class e{width=800;height=600;static fromHTMLCanvas(t){const{width:s,height:i}=t,r=new e(s,i),n=()=>{t.width=window.innerWidth,t.height=window.innerHeight,r.onWindowResize()};return window.addEventListener("resize",n.bind(this)),n(),r}useCamera(t){return this.camera=t,this}constructor(t,e){this.width=t,this.height=e}onWindowResize(){this.width=window.innerWidth,this.height=window.innerHeight}}class s{constructor(t,e){this.canvas=t,this.ctx=e,this.ctx.font="16px Sans-serif"}save(){return this.ctx.save(),this}restore(){return this.ctx.restore(),this}translate(t,e){return this.ctx.translate(t,e),this}rotate(t){return this.ctx.rotate(t),this}color(t){return this.ctx.fillStyle=t,this}rect(t,e,s,i){return this.ctx.fillRect(t,e,s,i),this.ctx.resetTransform(),this}text(t,e,s){if("center"===t){const{width:e}=this.ctx.measureText(s);t=this.canvas.width/2-e/2}this.ctx.fillText(s,t,e+16)}}class i{static NONE=0;static UP=1;static DOWN=2;static PRESSED=3;constructor(t=[]){this.states=t,this.createEventsListeners()}pool(){Object.keys(this.states).forEach((t=>{this.states[t]=this.findNextState(t)}))}createEventsListeners(){window.addEventListener("keydown",this.onKeyDown.bind(this)),window.addEventListener("keyup",this.onKeyUp.bind(this))}onKeyDown({key:t}){this.states[t]!==i.DOWN&&(this.states[t]=i.PRESSED)}onKeyUp({key:t}){this.states[t]=i.UP}findNextState(t){switch(this.states[t]){case i.UP:return i.NONE;case i.PRESSED:case i.DOWN:return i.DOWN;default:return i.PRESSED}}}class r{constructor(){this.keyboard=new i,console.log("Inputs init.")}isKeyDown(t){return!1}isKeyUp(t){return!1}isKeyPressed(t){return this.keyboard.states[t]===i.PRESSED}}class n{static TILE_SIZE=64}class o{THRESHOLD=5;SPEED=10;snap=!0;constructor(t=0,e=0,s=0,i=0){this.x=t,this.y=e,this.nextPosX=s,this.nextPosY=i}follow(t){this.target=t}update(t,e,s){this.snap&&this.snapToTarget(s),this.centerTargetIfExists(s);const i=-this.nextPosX-this.x,r=-this.nextPosY-this.y,n=Math.sqrt(r*r+i*i),o=i/n,a=r/n;n>this.THRESHOLD&&(this.x+=o*this.SPEED*e,this.y+=a*this.SPEED*e)}centerTargetIfExists(t){if(!this.target)return;const{x:e,y:s}=this.target.get("Placeable");this.nextPosX=e*n.TILE_SIZE-t.width/2+n.TILE_SIZE/2,this.nextPosY=s*n.TILE_SIZE-t.height/2+n.TILE_SIZE/2}snapToTarget(t){const{x:e,y:s}=this.target.get("Placeable");this.x=-e*n.TILE_SIZE+t.width/2-n.TILE_SIZE/2,this.y=-s*n.TILE_SIZE+t.height/2-n.TILE_SIZE/2,this.snap=!1}}var a={};class h{static sequence=0;constructor(t="Entity"){this.name=t,this.id=h.sequence++,this.components=[]}is(t){const e=this.getKey(t);this.components[e]=t}isNot(t){const e=this.getKey(t);delete this.components[e]}get(t){return this.components[t]}getComponentIds(){return Object.keys(this.components)}isDrawable(){return Boolean(Object.values(this.components).find((t=>"isDrawable"in t)))}isTile(){return Boolean(Object.values(this.components).find((t=>"isTile"in t)))}getKey(t){return t.id}}class c{constructor(t){this.id=t}}class l extends c{constructor(t=0,e=0){super("Placeable"),this.x=t,this.y=e}set(t,e){this.x=t,this.y=e}}class u extends c{constructor(t="hotpink"){super("Colorable"),this.color=t}}class d extends c{isDrawable=!0}class g extends d{constructor(t,e){super("Shape"),this.width=t*n.TILE_SIZE,this.height=e*n.TILE_SIZE}}class m extends g{constructor(){super(1,1)}}class p extends c{constructor(){super("Player")}}class T extends d{isTile=!0;constructor(){super("Tile")}}class w extends d{constructor(){super("Solid")}}class E extends c{constructor(t=0,e=0){super("Movable"),this.moveToX=t,this.moveToY=e}moveTo(t,e){this.moveToX=t,this.moveToY=e}hasMovement(){return Boolean(this.moveToX||this.moveToY)}reset(){this.moveToX=this.moveToY=0}}class y extends c{constructor(){super("Collidable")}}class x extends h{static create(t="Player"){const e=new x(t);return e.is(new l(1,1)),e.is(new u("green")),e.is(new m),e.is(new p),e.is(new E),e.is(new y),e}constructor(t){super(t)}}class f extends h{static create(t,e){const s=new f;return s.is(new T),s.is(new g(1,1)),s.is(new l(t,e)),s}constructor(){super("Tile")}}class P extends f{static SIZE=32;static create(t,e){const s=f.create(t,e);return s.is(new u("hotpink")),s}}class O extends f{static SIZE=32;static create(t,e){const s=f.create(t,e);return s.is(new u("blue")),s.is(new w),s.is(new y),s}}class b extends h{static create(){const t=new b("Dialer");return t.is(new l(1,1)),t.is(new u("cyan")),t.is(new g(1,1)),t.is(new y),t}constructor(t){super(t)}}t(a,"default",(function(){return h})),t(a,"EntityPlayer",(function(){return x})),t(a,"EntityTile",(function(){return f})),t(a,"EntityFloor",(function(){return P})),t(a,"EntityWall",(function(){return O})),t(a,"EntityDialer",(function(){return b}));class v{static for(t){return new v(t)}render(t,e){}update(t,e,s){}shouldRun(){const t=this.entity.getComponentIds();return e=t,s=this.requires,e.filter((t=>s.includes(t))).length===s.length?this:null;var e,s}get requires(){return[]}constructor(t){this.entity=t}}class I extends v{static for(t){return new I(t)}render(t,e){const s=this.getColor(),{x:i,y:r}=this.getPosition(),{width:o,height:a}=this.getSizes(),h=Math.round(i*n.TILE_SIZE+t.camera?.x),c=Math.round(r*n.TILE_SIZE+t.camera?.y);e.color(s).translate(h,c).rect(0,0,o,a)}get requires(){return["Placeable","Shape"]}getColor(){return this.entity.get("Colorable")?.color||"white"}getPosition(){return this.entity.get("Placeable")}getSizes(){return this.entity.get("Shape")}}class L extends v{static for(t){return new L(t)}update(t,e,s){t.isKeyPressed("w")?this.moveEntity(0,-1):t.isKeyPressed("s")?this.moveEntity(0,1):t.isKeyPressed("a")?this.moveEntity(-1,0):t.isKeyPressed("d")&&this.moveEntity(1,0)}get requires(){return["Placeable","Movable","Player"]}moveEntity(t,e){this.entity.get("Movable").moveTo(t,e)}}class S extends v{static for(t){return new S(t)}update(t,e,s){const i=this.getMovement();if(i.hasMovement()){const t=this.getPosition();i.lastPosX=t.x,i.lastPosY=t.y,t.x+=i.moveToX,t.y+=i.moveToY,i.reset()}}get requires(){return["Placeable","Movable"]}getMovement(){return this.entity.get("Movable")}getPosition(){return this.entity.get("Placeable")}}class M extends v{static for(t){return new M(t)}with(t){return this.entities=t,this}update(t,e,s){const i=this.getPosition();this.entities.forEach((t=>{if(t.id===this.entity.id)return;const e=t.get("Placeable"),s=e.x-i.x,r=e.y-i.y;if(Math.sqrt(s*s+r*r)<=0){console.log(this.entity.name,"collided with",t.name);const e=this.getMovement();e&&(i.x=e.lastPosX,i.y=e.lastPosY)}}))}get requires(){return["Placeable","Collidable"]}getMovement(){return this.entity.get("Movable")}getPosition(){return this.entity.get("Placeable")}}class R{static getRandomRoom(t){const e=R[t||"rooms"],s=e.length-1;return e[Math.round(Math.random()*s)]}static get top(){return[R.TOP,R.TOP_LEFT,R.TOP_RIGHT,R.TOP_BOTTOM]}static get bottom(){return[R.BOTTOM,R.BOTTOM_LEFT,R.BOTTOM_RIGHT,R.TOP_BOTTOM]}static get left(){return[R.LEFT,R.TOP_LEFT,R.BOTTOM_LEFT,R.LEFT_RIGHT]}static get right(){return[R.RIGHT,R.TOP_RIGHT,R.BOTTOM_RIGHT,R.LEFT_RIGHT]}static get rooms(){return[R.CENTER,R.LEFT,R.RIGHT,R.TOP,R.BOTTOM,R.TOP_LEFT,R.TOP_RIGHT,R.TOP_BOTTOM,R.BOTTOM_LEFT,R.BOTTOM_RIGHT,R.LEFT_RIGHT]}static get CENTER(){return{doors:{top:!0,bottom:!0,left:!0,right:!0},tiles:[[1,1,1,1,1,0,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,0,1,1,1,1,1]]}}static get LEFT(){return{doors:{top:!1,bottom:!1,left:!0,right:!1},tiles:[[1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1]]}}static get RIGHT(){return{doors:{top:!1,bottom:!1,left:!1,right:!0},tiles:[[1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1]]}}static get TOP(){return{doors:{top:!0,bottom:!1,left:!1,right:!1},tiles:[[1,1,1,1,1,0,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1]]}}static get BOTTOM(){return{doors:{top:!1,bottom:!0,left:!1,right:!1},tiles:[[1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,0,1,1,1,1,1]]}}static get TOP_LEFT(){return{doors:{top:!0,bottom:!1,left:!0,right:!1},tiles:[[1,1,1,1,1,0,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1]]}}static get TOP_RIGHT(){return{doors:{top:!0,bottom:!1,left:!1,right:!0},tiles:[[1,1,1,1,1,0,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1]]}}static get TOP_BOTTOM(){return{doors:{top:!0,bottom:!0,left:!1,right:!1},tiles:[[1,1,1,1,1,0,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,0,1,1,1,1,1]]}}static get BOTTOM_LEFT(){return{doors:{top:!1,bottom:!0,left:!0,right:!1},tiles:[[1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,0,1,1,1,1,1]]}}static get BOTTOM_RIGHT(){return{doors:{top:!1,bottom:!0,left:!1,right:!0},tiles:[[1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,0,1,1,1,1,1]]}}static get LEFT_RIGHT(){return{doors:{top:!1,bottom:!1,left:!0,right:!0},tiles:[[1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1]]}}}class _{static NONE=0;static FLOOR=1;static WALL=2;constructor(t=128){this.size=t,this.reset()}setTile(t,e,s){void 0!==this.map[t]&&void 0!==this.map[t][e]&&(this.map[t][e]=s)}getTile(t,e){return this.map[t]&&this.map[t][e]}setSpawn(t,e){this.spawnX=t,this.spawnY=e}registerComponents(t){this.map.forEach(((e,s)=>{e.forEach(((e,i)=>{e!==_.WALL?e===_.FLOOR&&t.spawn(P.create(s,i)):t.spawn(O.create(s,i))}))}))}reset(){this.map=Array(this.size).fill(0).map((()=>Array(this.size).fill(0).map((()=>_.NONE))))}}class H{}class D extends H{static for(t){return new D(t)}use(t){return this.model=t,this}generate(){const t=new _(this.size());return this.generateFromTemplate(t),this.generateEntities(t),t}generateFromTemplate(t){t.setSpawn(this.model.spawn.x,this.model.spawn.y);for(let e=0;e<this.modelWidth();e++)for(let s=0;s<this.modelHeight();s++)t.setTile(e,s,this.model.tiles[e][s])}generateEntities(t){this.model.entities?.map?.((({name:t,x:e,y:s})=>{this.world.spawn(a[t].create(),e,s)}))}modelWidth(){return this.model.tiles.length}modelHeight(){return this.model.tiles[0].length}size(){return Math.max(this.modelWidth(),this.modelHeight())}constructor(t){super(),this.world=t}}var F={name:"Daedalus",spawn:{x:54,y:16},entities:[{x:4,y:16,name:"EntityDialer"}],tiles:[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,1,1,1,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,1,1,1,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,1,1,1,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,1,1,1,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,1,1,1,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0],[0,0,2,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,2,0,0],[0,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,0],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,1,2,0,0,0,2,1,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,1,2,0,0,0,0,0,2,1,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,2,0,0,0,0,0,0,0,2,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,2],[2,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,2],[0,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,0]]};class C extends class{constructor(t="World"){this.name=t,this.entities=[],this.drawable=[],this.colliable=[]}init(t){this.map=class{static generate(t=128){const e=new _(t);return this.generateRooms(e),e}static generateRooms(t){Array(2).fill(0).map((()=>Array(2)));const e=[{x:Math.round(t.size/2)-5,y:Math.round(t.size/2)-5,direction:null}],s=[Object.values(e[0]).join(",")];for(t.setSpawn(e[0].x+5,e[0].y+5);e.length>0;){const{x:i,y:r,direction:n}=e.shift();if(s.includes([i,r].join(",")))continue;const o=n?R.getRandomRoom(n):R.CENTER;this.placeRoom(i,r,o,t),s.push([i,r].join(",")),o.doors.top&&e.push({x:i,y:r-10,direction:"bottom"}),o.doors.bottom&&e.push({x:i,y:r+10,direction:"top"}),o.doors.left&&e.push({x:i-10,y:r,direction:"right"}),o.doors.right&&e.push({x:i+10,y:r,direction:"left"})}}static placeRoom(t,e,s,i){for(let r=0;r<11;r++)for(let n=0;n<11;n++){const o=0===s.tiles[n][r]?_.FLOOR:_.WALL;i.setTile(t+r,e+n,o)}}}.generate(120),this.map.registerComponents(this),this.addPlayer()}render(t,e){this.drawable.forEach((s=>{I.for(s).render(t,e)}))}update(t,e,s){this.entities.forEach((i=>{L.for(i).shouldRun()?.update?.(t,e,s),S.for(i).shouldRun()?.update?.(t,e,s),M.for(i).with(this.colliable).shouldRun()?.update?.(t,e,s)}))}spawn(t,e,s){if(void 0!==e&&void 0!==s){t.get("Placeable")?.set?.(e,s)}t.get("Collidable")&&(this.colliable[t.id]=t),t.isDrawable()&&this.draw(t),this.entities[t.id]=t}getPlayer(){return this.player}addPlayer(){const{spawnX:t,spawnY:e}=this.map;this.player=x.create("Vornian"),this.spawn(this.player,t,e)}draw(t){t.isTile()?this.drawable.unshift(t):this.drawable.push(t)}}{constructor(t="My Ship"){super(t)}init(t){this.map=D.for(this).use(F).generate(),this.map.registerComponents(this),this.addPlayer()}}class B{constructor(){this.worlds=new Map}init(t){this.createAndInitSpaceship(t)}render(t,e){this.current?.render?.(t,e),e.color("white").text("center",0,this.current?.name)}update(t,e,s){this.current?.update?.(t,e,s)}getPlayer(){return this.current?.getPlayer?.()}createAndInitSpaceship(t){this.worlds.spaceship=new C,this.worlds.spaceship.init(t),this.current=this.worlds.spaceship}}const N=document.getElementById("canvas");new class{constructor(t){this.canvas=e.fromHTMLCanvas(t),this.ctx=t.getContext("2d"),this.ctx.imageSmoothingEnabled=!0,this.ctx.imageSmoothingQuality="high"}init(t){this.game=t,this.graphics=new s(this.canvas,this.ctx),this.input=new r,this.game.init(this.canvas),this.requestAnimationFrame()}gameLoop(){this.game.update(this.input,1,this.canvas),this.input.keyboard.pool(),this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.game.render(this.canvas,this.graphics),this.requestAnimationFrame()}requestAnimationFrame(){window.requestAnimationFrame(this.gameLoop.bind(this))}}(N).init(new class{constructor(){this.worldManager=new B,this.camera=new o}init(t){console.log("Game init."),this.worldManager.init(t),t.useCamera(this.camera),this.camera.follow(this.worldManager.getPlayer())}render(t,e){this.worldManager.render(t,e)}update(t,e,s){this.worldManager.update(t,e,s),this.camera.update(t,e,s)}});
//# sourceMappingURL=index.daf323d9.js.map
