class t{width=800;height=600;static fromHTMLCanvas(e){const{width:s,height:i}=e,r=new t(s,i),n=()=>{e.width=window.innerWidth,e.height=window.innerHeight,r.onWindowResize()};return window.addEventListener("resize",n.bind(this)),n(),r}constructor(t,e){this.width=t,this.height=e}onWindowResize(){this.width=window.innerWidth,this.height=window.innerHeight}}class e{constructor(t,e){this.canvas=t,this.ctx=e}save(){return this.ctx.save(),this}restore(){return this.ctx.restore(),this}translate(t,e){return this.ctx.translate(t,e),this}rotate(t){return this.ctx.rotate(t),this}color(t){return this.ctx.fillStyle=t,this}rect(t,e,s,i){return this.ctx.fillRect(t,e,s,i),this.ctx.resetTransform(),this}}class s{static sequence=0;constructor(t="Entity"){this.name=t,this.id=s.sequence++,this.components=[]}is(t){const e=this.getKey(t);this.components[e]=t}isNot(t){const e=this.getKey(t);delete this.components[e]}get(t){return this.components[t]}getComponentIds(){return Object.keys(this.components)}isDrawable(){return Boolean(Object.values(this.components).find((t=>"isDrawable"in t)))}getKey(t){return t.id}}class i{constructor(t){this.id=t}}class r extends i{constructor(t=0,e=0){super("Placeable"),this.x=t,this.y=e}set(t,e){this.x=t,this.y=e}}class n extends i{constructor(t="hotpink"){super("Colorable"),this.color=t}}class a extends i{isDrawable=!0}class o extends a{constructor(t,e){super("Shape"),this.width=t,this.height=e}}class h extends o{constructor(){super(16,32)}}class c extends i{constructor(){super("Player")}}class l extends a{constructor(){super("Tile")}}class u extends a{constructor(){super("Solid")}}class d extends s{static SIZE=32;static create(t,e){const s=new d;return s.is(new l),s.is(new o(this.SIZE,this.SIZE)),s.is(new r(t*this.SIZE,e*this.SIZE)),s}constructor(){super("Tile")}}class w extends s{static create(t="Player"){const e=new w(t);return e.is(new r(1*d.SIZE,1*d.SIZE)),e.is(new n("green")),e.is(new h),e.is(new c),e}constructor(t){super(t)}}class p extends d{static SIZE=32;static create(t,e){const s=d.create(t,e);return s.is(new n("hotpink")),s}}class g extends d{static SIZE=32;static create(t,e){const s=d.create(t,e);return s.is(new n("blue")),s.is(new u),s}}class m{static for(t){return new m(t)}render(t,e){}update(t,e){}shouldRun(){const t=this.entity.getComponentIds();return e=t,s=this.requires,JSON.stringify(e.sort())===JSON.stringify(s.sort())?this:null;var e,s}get requires(){return[]}constructor(t){this.entity=t}}class x extends m{static for(t){return new x(t)}render(t,e){const s=this.getColor(),{x:i,y:r}=this.getPosition(),{width:n,height:a}=this.getSizes();e.color(s).translate(i,r).rect(0,0,n,a)}get requires(){return["Placeable","Shape"]}getColor(){return this.entity.get("Colorable")?.color||"white"}getPosition(){return this.entity.get("Placeable")}getSizes(){return this.entity.get("Shape")}}class S extends m{static for(t){return new S(t)}update(t,e){}get requires(){return["Placeable","Player"]}}class f{static FLOOR=0;static WALL=1;constructor(t=128){this.size=t,this.reset()}setTile(t,e,s){void 0!==this.map[t]&&void 0!==this.map[t][e]&&(this.map[t][e]=s)}getTile(t,e){return this.map[t]&&this.map[t][e]}setSpawn(t,e){this.spawnX=t*d.SIZE,this.spawnY=e*d.SIZE}registerComponents(t){this.map.forEach(((e,s)=>{e.forEach(((e,i)=>{e!==f.WALL?t.spawn(p.create(s,i)):t.spawn(g.create(s,i))}))}))}reset(){this.map=Array(this.size).fill(0).map((()=>Array(this.size).fill(0).map((()=>f.FLOOR))))}}class y{constructor(){this.entities=[],this.entitiesToDraw=[]}init(t){this.map=class{static generate(t=128){const e=new f(t);return this.generateBaseFloor(e),this.findSpawnPosition(e),e}static generateBaseFloor(t){for(let e=0;e<t.size;e++)for(let s=0;s<t.size;s++){const i=Math.random()>.5?f.FLOOR:f.WALL;t.setTile(e,s,i)}}static findSpawnPosition(t){t.setSpawn(1,1)}}.generate(32),this.map.registerComponents(this);const{spawnX:e,spawnY:s}=this.map;this.spawn(w.create("Vornian"),e,s)}render(t,e){this.entitiesToDraw.forEach((s=>{x.for(s).render(t,e),this.entitiesToDraw.shift()}))}update(t,e){this.entities.forEach((s=>{S.for(s).shouldRun()?.update?.(t,e),s.isDrawable()&&this.draw(s)}))}spawn(t,e,s){if(void 0!==e&&void 0!==s){t.get("Placeable")?.set?.(e,s)}this.entities[t.id]=t}draw(t){this.entitiesToDraw.push(t)}}const v=document.getElementById("canvas");new class{constructor(e){this.canvas=t.fromHTMLCanvas(e),this.ctx=e.getContext("2d"),this.ctx.imageSmoothingEnabled=!0,this.ctx.imageSmoothingQuality="high"}init(t){this.game=t,this.graphics=new e(this.canvas,this.ctx),this.game.init(this.canvas),this.requestAnimationFrame()}gameLoop(){this.game.update(this.input,1),this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.game.render(this.canvas,this.graphics),this.requestAnimationFrame()}requestAnimationFrame(){window.requestAnimationFrame(this.gameLoop.bind(this))}}(v).init(new class{r=0;constructor(){this.world=new y}init(t){console.log("Game init."),this.world.init(t)}render(t,e){e.color("red").translate(64,64).rotate(this.r).rect(-32,-32,64,64),e.color("yellow").rect(64,64,64,64),this.world.render(t,e)}update(t,e){this.r+=.05*e,this.world.update(t,e)}});
//# sourceMappingURL=index.403423b5.js.map
